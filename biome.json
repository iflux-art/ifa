{
  "$schema": "https://biomejs.dev/schemas/2.2.5/schema.json",
  "linter": {
    "enabled": true,
    "rules": {
      "recommended": true,
      "correctness": {
        "useExhaustiveDependencies": "error",
        "useHookAtTopLevel": "error",
        "noUnusedVariables": "error",
        "noUnusedImports": "error",
        "noUndeclaredVariables": "error",
        "noUnreachable": "error",
        "noConstAssign": "error",
        "noEmptyPattern": "error",
        "noGlobalObjectCalls": "error",
        "noInvalidConstructorSuper": "error",

        "noSetterReturn": "error",
        "noSwitchDeclarations": "error",
        "noUnsafeFinally": "error",
        "noUnsafeOptionalChaining": "error",
        "useIsNan": "error",
        "useValidForDirection": "error"
      },
      "performance": {
        "noAccumulatingSpread": "error",
        "noDelete": "warn",
        "noBarrelFile": "off",
        "noReExportAll": "off"
      },
      "style": {
        "useConst": "error",
        "useTemplate": "error",
        "noNegationElse": "error",
        "useCollapsedElseIf": "error",
        "useBlockStatements": "error",
        "useConsistentArrayType": "error",
        "useExponentiationOperator": "error",
        "useFragmentSyntax": "error",
        "useSingleVarDeclarator": "error"
      },
      "suspicious": {
        "noExplicitAny": "warn",
        "noArrayIndexKey": "warn",
        "useAwait": "error",
        "noAsyncPromiseExecutor": "error",
        "noCatchAssign": "error",
        "noClassAssign": "error",
        "noCompareNegZero": "error",
        "noControlCharactersInRegex": "error",
        "noDebugger": "error",
        "noDuplicateCase": "error",
        "noDuplicateClassMembers": "error",
        "noDuplicateObjectKeys": "error",
        "noDuplicateParameters": "error",
        "noEmptyBlockStatements": "error",
        "noFallthroughSwitchClause": "error",
        "noFunctionAssign": "error",
        "noGlobalAssign": "error",
        "noImportAssign": "error",
        "noMisleadingCharacterClass": "error",
        "noPrototypeBuiltins": "error",
        "noRedeclare": "error",
        "noShadowRestrictedNames": "error",
        "noUnsafeNegation": "error"
      },
      "complexity": {
        "noBannedTypes": "error",
        "noUselessConstructor": "error",
        "useArrowFunction": "error",
        "noExcessiveCognitiveComplexity": "warn",
        "noForEach": "warn",

        "noStaticOnlyClass": "error",
        "noThisInStatic": "error",
        "noUselessCatch": "error",
        "noUselessEmptyExport": "error",
        "noUselessFragments": "error",
        "noUselessLabel": "error",
        "noUselessLoneBlockStatements": "error",
        "noUselessRename": "error",
        "noUselessSwitchCase": "error",
        "noUselessTernary": "error",
        "noUselessTypeConstraint": "error",
        "noVoid": "error",

        "useLiteralKeys": "error",
        "useOptionalChain": "error",
        "useRegexLiterals": "error",
        "useSimpleNumberKeys": "error",
        "useSimplifiedLogicExpression": "error"
      },
      "security": {
        "noDangerouslySetInnerHtml": "error",
        "noGlobalEval": "error"
      },
      "nursery": {
        "useSortedClasses": "error"
      }
    }
  },
  "formatter": {
    "enabled": true,
    "formatWithErrors": false,
    "indentStyle": "space",
    "indentWidth": 2,
    "lineWidth": 100,
    "lineEnding": "crlf",
    "attributePosition": "auto"
  },
  "files": {
    "maxSize": 10485760,
    "ignoreUnknown": true,
    "includes": [
      "apps/*/src/**/*",
      "packages/*/src/**/*",
      "*.js",
      "*.jsx",
      "*.ts",
      "*.tsx",
      "*.json",
      "*.mjs",
      "*.cjs",
      "*.md",
      "*.mdx"
    ]
  },
  "overrides": [
    {
      "includes": [
        "**/node_modules/**",
        "**/dist/**",
        "**/build/**",
        "**/.next/**",
        "**/*.min.*",
        "**/coverage/**",
        "**/test-results/**",
        "**/playwright-report/**",
        "**/.turbo/**",
        "**/storybook-static/**"
      ],
      "formatter": {
        "enabled": false
      },
      "linter": {
        "enabled": false
      }
    },
    {
      "includes": [
        "**/*.test.{ts,tsx,js,jsx}",
        "**/*.spec.{ts,tsx,js,jsx}",
        "**/e2e/**/*",
        "**/tests/**/*",
        "**/__tests__/**/*"
      ],
      "linter": {
        "rules": {
          "suspicious": {
            "noExplicitAny": "off"
          },
          "complexity": {
            "noExcessiveCognitiveComplexity": "off"
          },
          "performance": {
            "noBarrelFile": "off"
          }
        }
      }
    },
    {
      "includes": [
        "**/next.config.*",
        "**/tailwind.config.*",
        "**/vitest.config.*",
        "**/playwright.config.*",
        "**/turbo.json",
        "**/biome.json",
        "**/tsconfig.json",
        "**/package.json"
      ],
      "linter": {
        "rules": {
          "style": {
            "useConst": "off"
          },
          "complexity": {
            "noExcessiveCognitiveComplexity": "off"
          },
          "suspicious": {
            "noExplicitAny": "off"
          }
        }
      }
    },
    {
      "includes": [
        "**/*.d.ts"
      ],
      "linter": {
        "rules": {
          "suspicious": {
            "noExplicitAny": "off"
          },
          "style": {
            "useConst": "off"
          }
        }
      }
    },
    {
      "includes": [
        "packages/*/src/index.ts",
        "packages/*/src/**/index.ts"
      ],
      "linter": {
        "rules": {
          "performance": {
            "noBarrelFile": "off",
            "noReExportAll": "off"
          }
        }
      }
    },
    {
      "includes": [
        "packages/*/src/**/*"
      ],
      "linter": {
        "rules": {
          "suspicious": {
            "noExplicitAny": "warn"
          }
        }
      }
    }
  ],
  "javascript": {
    "formatter": {
      "quoteStyle": "double",
      "jsxQuoteStyle": "double",
      "trailingCommas": "es5",
      "semicolons": "always",
      "arrowParentheses": "always",
      "bracketSpacing": true,
      "bracketSameLine": false,
      "quoteProperties": "asNeeded",
      "attributePosition": "auto"
    }
  },
  "json": {
    "formatter": {
      "enabled": true,
      "indentStyle": "space",
      "indentWidth": 2,
      "lineWidth": 100
    }
  },

  "css": {
    "formatter": {
      "enabled": true,
      "indentStyle": "space",
      "indentWidth": 2,
      "lineWidth": 100
    }
  }
}
